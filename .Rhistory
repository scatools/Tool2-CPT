color = cols,
popup = "type",
group = "pols") %>%
setView(lng = 8.3, lat = 46.85, zoom = 9) %>%
addLayersControl(overlayGroups = "pols")
})
system.time({
m = leaflet() %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%
addGlPolygons(data = ch_lu,color = cbind(0, 0.2, 1),
group = "pols") %>%
setView(lng = 8.3, lat = 46.85, zoom = 9) %>%
addLayersControl(overlayGroups = "pols")
})
m
setwd("D:/react/test")
ch_lu = st_read("/data/gis_osm_landuse_a_free_1.shp")
ch_lu = st_read("/data/gis_osm_landuse_a_free_1.shp")
pwd()
ch_lu = st_read("./data/gis_osm_landuse_a_free_1.shp")
ch_lu = ch_lu[, c(1, 3, 4)] # don't handle NAs so far
options(viewer = NULL)
cols = colour_values_rgb(ch_lu$type, include_alpha = FALSE) / 255
system.time({
m = leaflet() %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%
addGlPolygons(data = ch_lu,
color = cols,
popup = "type",
group = "pols") %>%
setView(lng = 8.3, lat = 46.85, zoom = 9) %>%
addLayersControl(overlayGroups = "pols")
})
m
View(ch_lu)
ch_lu = st_read("./data/gis_osm_landuse_a_free_1.shp")
ch_lu1 = st_read("sca_landonly_withdata/sca_landonly_withdata.shp")
setwd("D:/react/shinysca/data")
ch_lu1 = st_read("sca_landonly_withdata/sca_landonly_withdata.shp")
options(viewer = NULL)
cols = colour_values_rgb(ch_lu$Biodiversi, include_alpha = FALSE) / 255
system.time({
m = leaflet() %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%
addGlPolygons(data = ch_lu1) %>%
setView(lng = 8.3, lat = 46.85, zoom = 9) %>%
addLayersControl(overlayGroups = "pols")
})
m
testdata= ch_lu1[100,]
View(testdata)
testdata= ch_lu1[1:100,]
options(viewer = NULL)
m = leaflet() %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%
addGlPolygons(data = testdata) %>%
setView(lng = 8.3, lat = 46.85, zoom = 9) %>%
addLayersControl(overlayGroups = "pols")
m
devtools::install_github("rstudio/leaflet.mapboxgl")
devtools::install_github("rstudio/leaflet.mapboxgl")
uninstall.packages(digest)
library(installr)
uninstall.packages(digest)
uninstall.packages("digest")
remove.packages("digest", lib="~/R/win-library/3.6")
devtools::install_github("rstudio/leaflet.mapboxgl")
install.packages("digest")
devtools::install_github("rstudio/leaflet.mapboxgl")
install.packages("Rcpp")
devtools::install_github("rstudio/leaflet.mapboxgl")
install.packages("rlang")
install.packages("jsonlite")
install.packages("r6'")
install.packages("R6")
install.packages("shiny")
install.packages(c("backports", "BH", "bookdown", "broom", "callr", "classInt", "cli", "colourvalues", "crul", "curl", "data.table", "DBI", "devtools", "dplyr", "DT", "e1071", "ellipsis", "fansi", "foreach", "future", "gdalUtils", "gdtools", "geojsonio", "geojsonlint", "gh", "globals", "haven", "hexbin", "hms", "jsonify", "knitr", "leafpop", "listenv", "lwgeom", "mapmisc", "maptools", "mime", "modelr", "ore", "pillar", "pkgbuild", "pkgconfig", "plotly", "plyr", "pool", "prettyunits", "processx", "protolite", "ps", "purrr", "R.methodsS3", "R.oo", "R.utils", "RcppArmadillo", "RCurl", "remotes", "rgdal", "rgeos", "rmapshaper", "rmarkdown", "RMySQL", "RNifti", "roxygen2", "rpostgis", "rsconnect", "rstudioapi", "rvest", "satellite", "selectr", "sf", "shinycssloaders", "shinyjs", "stringi", "svglite", "testthat", "tidyr", "tidyselect", "tidyverse", "tiler", "tinytex", "units", "V8", "vctrs", "webshot", "xfun", "yaml"))
devtools::install_github("rstudio/leaflet.mapboxgl")
options(mapbox.accessToken = "pk.eyJ1IjoiY2h1Y2swNTIwIiwiYSI6ImNrMDk2NDFhNTA0bW0zbHVuZTk3dHQ1cGUifQ.dkjP73KdE6JMTiLcUoHvUA")
options(viewer = NULL)
setwd("D:/react/shinysca/data")
ch_lu1 = st_read("sca_landonly_withdata/sca_landonly_withdata.shp")
library(mapview)
library(leaflet)
library(leafgl)
library(sf)
library(colourvalues)
ch_lu1 = st_read("sca_landonly_withdata/sca_landonly_withdata.shp")
testdata= ch_lu1[1:100,]
system.time({
m = leaflet() %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%
addGlPolygons(data = testdata) %>%
setView(lng = 8.3, lat = 46.85, zoom = 9) %>%
addLayersControl(overlayGroups = "pols")
})
m
system.time({
m = leaflet() %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%
addGlPolygons(data = ch_lu1) %>%
setView(lng = 8.3, lat = 46.85, zoom = 9) %>%
addLayersControl(overlayGroups = "pols")
})
m
setwd("D:/react/test")
ch_lu = st_read("./data/gis_osm_landuse_a_free_1.shp")
View(ch_lu1)
View(ch_lu)
options(viewer = NULL)
cols = colour_values_rgb(ch_lu$fclass, include_alpha = FALSE) / 255
system.time({
m = leaflet() %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%
addGlPolygons(data = ch_lu,
color = cols,
popup = "fclass",
group = "pols") %>%
setView(lng = 8.3, lat = 46.85, zoom = 9) %>%
addLayersControl(overlayGroups = "pols")
})
library(leaflet.mapboxgl)
system.time({
m = leaflet() %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%
addGlPolygons(data = ch_lu1) %>%
setView(lng = 8.3, lat = 46.85, zoom = 9) %>%
addLayersControl(overlayGroups = "pols")
})
m
?addGlPolygons
if (interactive()) {
library(mapview)
library(leaflet)
library(leafgl)
library(sf)
library(colourvalues)
fran = st_cast(franconia, "POLYGON")
cols = colour_values_rgb(fran$NUTS_ID, include_alpha = FALSE) / 255
options(viewer = NULL)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%
addGlPolygons(data = fran, color = cols, popup = "NAME_ASCI") %>%
addMouseCoordinates() %>%
setView(lng = 10.5, lat = 49.5, zoom = 8)
}
View(fran)
if (interactive()) {
library(mapview)
library(leaflet)
library(leafgl)
library(sf)
library(colourvalues)
chu_lu_cast = st_cast(ch_lu, "POLYGON")
cols = colour_values_rgb(chu_lu_cast$fclass, include_alpha = FALSE) / 255
options(viewer = NULL)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%
addGlPolygons(data = chu_lu_cast, color = cols, popup = "fclass") %>%
addMouseCoordinates() %>%
setView(lng = 10.5, lat = 49.5, zoom = 8)
}
View(testdata)
class(testdata)
class(testdata$geometry)
fran = testdata
fran = testdata
cols = colour_values_rgb(fran$Biodiversi, include_alpha = FALSE) / 255
options(viewer = NULL)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%
addGlPolygons(data = fran, color = cols, popup = "Biodiversi") %>%
addMouseCoordinates() %>%
setView(lng = 10.5, lat = 49.5, zoom = 8)
testdata= ch_lu1[1:1000,]
fran = testdata
cols = colour_values_rgb(fran$Biodiversi, include_alpha = FALSE) / 255
options(viewer = NULL)
cols
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%
addGlPolygons(data = fran, color = cols, popup = "Biodiversi") %>%
addMouseCoordinates() %>%
setView(lng = 10.5, lat = 49.5, zoom = 8)
library(mapview)
library(leaflet)
library(leafgl)
library(sf)
library(colourvalues)
fran = st_cast(franconia, "POLYGON")
fran = testdata
cols = colour_values_rgb(fran$Biodiversi, include_alpha = FALSE) / 255
cols
options(viewer = NULL)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%
addGlPolygons(data = fran, color = cols, popup = "Biodiversi") %>%
leafem::addMouseCoordinates() %>%
setView(lng = 10.5, lat = 49.5, zoom = 8)
fran = st_cast(franconia, "POLYGON")
View(fran)
class(fran)
class(fran$geometry)
testdata$geometry
class(testdata$geometry)
class(testdata$geometry)==class(fran)
class(fran$geometry)
class(testdata$geometry)==class(fran$geometry)
if (interactive()) {
library(mapview)
library(leaflet)
library(leafgl)
library(sf)
library(colourvalues)
fran = st_cast(franconia, "POLYGON")
cols = colour_values_rgb(fran$NUTS_ID, include_alpha = FALSE) / 255
options(viewer = NULL)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%
addGlPolygons(data = fran, color = cols, popup = "NAME_ASCI") %>%
addMouseCoordinates() %>%
setView(lng = 10.5, lat = 49.5, zoom = 8)
}
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%
addGlPolygons(data = fran, color = cols, popup = "NAME_ASCI") %>%
addGlPolygons(data = testdata) %>%
addMouseCoordinates() %>%
setView(lng = 10.5, lat = 49.5, zoom = 8)
View(testdata)
View(testdata[[23]][[1]])
View(fran)
ch_lu1<-st_transform(ch_lu1,crs = 4326)
testdata= ch_lu1[1:1000,]
if (interactive()) {
library(mapview)
library(leaflet)
library(leafgl)
library(sf)
library(colourvalues)
fran = st_cast(franconia, "POLYGON")
class(fran$geometry)
fran = testdata
class(testdata$geometry)==class(fran$geometry)
cols = colour_values_rgb(fran$Biodiversi, include_alpha = FALSE) / 255
cols
options(viewer = NULL)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%
addGlPolygons(data = fran, color = cols, popup = "Biodiversi") %>%
leafem::addMouseCoordinates() %>%
setView(lng = 10.5, lat = 49.5, zoom = 8)
}
if (interactive()) {
library(mapview)
library(leaflet)
library(leafgl)
library(sf)
library(colourvalues)
fran = ch_lu1
cols = colour_values_rgb(fran$Biodiversi, include_alpha = FALSE) / 255
cols
options(viewer = NULL)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%
addGlPolygons(data = fran, color = cols, popup = "Biodiversi") %>%
leafem::addMouseCoordinates() %>%
setView(lng = 10.5, lat = 49.5, zoom = 8)
}
shiny::runApp('D:/reportexploration')
runApp('D:/reportexploration')
runApp('D:/reportexploration')
runApp('D:/reportexploration')
if (interactive()) {
library(mapview)
library(leaflet)
library(leafgl)
library(sf)
library(colourvalues)
fran = st_cast(franconia, "POLYGON")
cols = colour_values_rgb(fran$NUTS_ID, include_alpha = FALSE) / 255
options(viewer = NULL)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%
addGlPolygons(data = fran, color = cols, popup = "NAME_ASCI") %>%
addGlPolygons(data = testdata) %>%
addMouseCoordinates() %>%
setView(lng = 10.5, lat = 49.5, zoom = 8)
}
View(ch_lu1)
fran = ch_lu1
labels <- sprintf(
"<strong>%s</strong><br/>%s people %s has %s been %s confirmed %s infected",
fran$padus, fran$area_nha,fran$area_conne,fran$WORKINGLAN,fran$Sleuth_v2,fran$THREATINDE
) %>% lapply(htmltools::HTML)
cols = colour_values_rgb(fran$Biodiversi, include_alpha = FALSE) / 255
cols
options(viewer = NULL)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%
addGlPolygons(data = fran, color = cols, popup = "Biodiversi",label=labels) %>%
leafem::addMouseCoordinates() %>%
setView(lng = 10.5, lat = 49.5, zoom = 8)
?addGlPolygons
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%
addGlPolygons(data = fran, color = cols, popup = labels) %>%
leafem::addMouseCoordinates() %>%
setView(lng = 10.5, lat = 49.5, zoom = 8)
labels <- sprintf(
"%s %s people %s has %s been %s confirmed %s infected",
fran$padus, fran$area_nha,fran$area_conne,fran$WORKINGLAN,fran$Sleuth_v2,fran$THREATINDE
)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%
addGlPolygons(data = fran, color = cols, popup = labels) %>%
leafem::addMouseCoordinates() %>%
setView(lng = 10.5, lat = 49.5, zoom = 8)
ch_lu1$labels <- sprintf(
"%s %s people %s has %s been %s confirmed %s infected",
fran$padus, fran$area_nha,fran$area_conne,fran$WORKINGLAN,fran$Sleuth_v2,fran$THREATINDE
)
fran = ch_lu1
cols = colour_values_rgb(fran$Biodiversi, include_alpha = FALSE) / 255
options(viewer = NULL)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%
addGlPolygons(data = fran, color = cols, popup = labels) %>%
leafem::addMouseCoordinates() %>%
setView(lng = 10.5, lat = 49.5, zoom = 8)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%
addGlPolygons(data = fran, color = cols, popup = "labels") %>%
leafem::addMouseCoordinates() %>%
setView(lng = 10.5, lat = 49.5, zoom = 8)
library(leaflet)
?leafletOutput
runApp('D:/react/shinysca/app4_alpha_leafletredo')
runApp('D:/react/shinysca/app4_alpha_leafletredo')
runApp('D:/react/shinysca/app4_alpha_leafletredo')
?colour_values_rgb
colour_values_rgb(1:5)
runApp('D:/react/shinysca/app4_alpha_leafletredo')
test<-ch_lu1[1:100,]
colour_values_rgb(ch_lu1$Biodiversi, include_alpha = FALSE) / 255
colour_values_rgb(ch_lu1$Biodiversi, include_alpha = FALSE) / 255[1:100]
colour_values_rgb(ch_lu1$Biodiversi, include_alpha = FALSE)[1:100] / 255
test1<-colour_values_rgb(ch_lu1$Biodiversi, include_alpha = FALSE) / 255
test2<-colour_values_rgb(test$Biodiversi, include_alpha = FALSE) / 255
test1[1:10,1:3]
test2[1:10,1:3]
test$Biodiversi[1:10]
test1<-colour_values_rgb(ch_lu1$Biodiversi, include_alpha = FALSE,n_summaries=5) / 255
test1<-colour_values_rgb(ch_lu1$Biodiversi, include_alpha = FALSE,n_summaries=5)
View(test1)
test$Biodiversi<-test$Biodiversi*0.5
test2<-colour_values_rgb(test$Biodiversi, include_alpha = FALSE) / 255
View(test2)
test2<-colour_values_rgb(test$Biodiversi, include_alpha = FALSE,n_summaries=5)
test2
test<-ch_lu1[1:100,]
test$Biodiversi<-test$Biodiversi*0.5
bins <- c(0, 0.25, 0.5, 0.75, 1)
pal <- colorBin("YlOrRd", domain = test$Biodiversi, bins = bins)
pal()
pal
fran = ch_lu1
cols = colour_values_rgb(fran$Biodiversi, include_alpha = FALSE) / 255
test<-ch_lu1[1:100,]
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%
addGlPolygons(data = test, color = ~pal(Biodiversi), popup = "labels") %>%
leafem::addMouseCoordinates() %>%
setView(lng = 10.5, lat = 49.5, zoom = 8)
pal(test$Biodiversi)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%
addGlPolygons(data = test, color = ~col2rgb(pal(Biodiversi))/255, popup = "labels") %>%
leafem::addMouseCoordinates() %>%
setView(lng = 10.5, lat = 49.5, zoom = 8)
col2rgb(pal(test$Biodiversi))/255
test2<-colour_values_rgb(test$Biodiversi, include_alpha = FALSE) / 255
test2
?colour_values_rgb
test2<-colour_values_rgb(pal(test$Biodiversi), include_alpha = FALSE) / 255
test2
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%
addGlPolygons(data = test, color = ~colour_values_rgb(pal(Biodiversi))/255, popup = "labels") %>%
leafem::addMouseCoordinates() %>%
setView(lng = 10.5, lat = 49.5, zoom = 8)
fran = ch_lu1
fran = ch_lu1
bins <- c(0, 0.25, 0.5, 0.75, 1)
pal <- colorBin("YlOrRd", domain = fran$Biodiversi, bins = bins)
cols = colour_values_rgb(pal(fran$Biodiversi), include_alpha = FALSE) / 255
cols
options(viewer = NULL)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%
addGlPolygons(data = test, color = ~colour_values_rgb(pal(Biodiversi))/255, popup = "labels") %>%
leafem::addMouseCoordinates() %>%
setView(lng = 10.5, lat = 49.5, zoom = 8)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%
addGlPolygons(data = test, color = cols, popup = "labels") %>%
leafem::addMouseCoordinates() %>%
setView(lng = 10.5, lat = 49.5, zoom = 8)
if (interactive()) {
library(mapview)
library(leaflet)
library(leafgl)
library(sf)
library(colourvalues)
fran = ch_lu1
bins <- c(0, 0.25, 0.5, 0.75, 1)
pal <- colorBin("YlOrRd", domain = fran$Biodiversi, bins = bins)
cols = colour_values_rgb(pal(fran$Biodiversi), include_alpha = FALSE) / 255
cols
options(viewer = NULL)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%
addGlPolygons(data = fran, color = cols, popup = "labels") %>%
leafem::addMouseCoordinates() %>%
setView(lng = 10.5, lat = 49.5, zoom = 8)
}
if (interactive()) {
library(mapview)
library(leaflet)
library(leafgl)
library(sf)
library(colourvalues)
fran = ch_lu1
fran$Biodiversi<-0.5*fran$Biodiversi
bins <- c(0, 0.25, 0.5, 0.75, 1)
pal <- colorBin("YlOrRd", domain = fran$Biodiversi, bins = bins)
cols = colour_values_rgb(pal(fran$Biodiversi), include_alpha = FALSE) / 255
cols
options(viewer = NULL)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%
addGlPolygons(data = fran, color = cols, popup = "labels") %>%
leafem::addMouseCoordinates() %>%
setView(lng = 10.5, lat = 49.5, zoom = 8)
}
leafletProxy("myMap")%>%
clearGroup("weight")%>%
addGlPolygons(data = data1, color = cols,group = "weight")%>%
?addLegend()
?addLegend
runApp('D:/react/shinysca/app4_alpha_leafletredo')
runApp('D:/react/shinysca/app4_alpha_leafletredo')
showCols(cl= colors(), bg="gray33", rot=30, cex=0.75)
runApp('D:/react/shinysca/app4_alpha_leafletredo')
?leafglOutput
runApp('D:/react/shinysca/app4_alpha_leafletredo')
runApp('D:/react/shinysca/app4_alpha_leafletredo')
if (interactive()) {
library(mapview)
library(leaflet)
library(leafgl)
library(sf)
library(colourvalues)
fran = ch_lu1
fran$Biodiversi<-0.5*fran$Biodiversi
bins <- c(0, 0.25, 0.5, 0.75, 1)
pal <- colorBin("YlOrRd", domain = fran$Biodiversi, bins = bins)
cols = colour_values_rgb(pal(fran$Biodiversi), include_alpha = FALSE) / 255
cols
options(viewer = NULL)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%
addGlPolygons(data = fran, color = cols, popup = "labels") %>%
leafem::addMouseCoordinates() %>%
setView(lng = 10.5, lat = 49.5, zoom = 8)
}
mapshot(m, file = "~/Rplot.png")
load("E:/Landcover_redo_1102/result3/resultinr.RData")
setwd("D:/SCATOOL2")
untar("code.tar")
shiny::runApp()
?paste0
runApp()
View(Hex_tile)
runApp()
?datatable
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?removeModal
shiny::runApp()
runApp()
?show
?hidden
runApp()
setwd("D:/SCATOOL2 - Copy")
untar("code.tar")
runApp('D:/reportexploration/bugtesting.R')
runApp('D:/reportexploration/bugtesting.R')
runApp('D:/reportexploration/bugtesting.R')
library(rsconnect)
?`rsconnect-package`
require(devtools)
install_version("shiny", version = "1.3.6", repos = "http://cran.us.r-project.org")
install_version("shiny", version = "1.3.6")
install_version("shiny", version = "1.3.2")
?hidden
runApp('D:/SCATOOL2')
